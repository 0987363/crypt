{"name":"Crypt","tagline":"Store and retrieve encrypted configuration parameters from etcd or consul","body":"# crypt\r\n\r\nYou can use crypt as a command line tool or as a configuration library:\r\n\r\n* [crypt cli](bin/crypt)\r\n* [crypt/config](config)\r\n\r\n## Generating gpg keys and keyrings\r\n\r\nThe crypt cli and config package require gpg keyrings. \r\n\r\n### Create a key and keyring from a batch file\r\n\r\n```\r\nvim app.batch\r\n```\r\n\r\n```\r\n%echo Generating a configuration OpenPGP key\r\nKey-Type: default\r\nSubkey-Type: default\r\nName-Real: app\r\nName-Comment: app configuration key\r\nName-Email: app@example.com\r\nExpire-Date: 0\r\n%pubring .pubring.gpg\r\n%secring .secring.gpg\r\n%commit\r\n%echo done\r\n```\r\n\r\nRun the following command:\r\n\r\n```\r\ngpg2 --batch --armor --gen-key app.batch\r\n```\r\n\r\nYou should now have two keyrings, `.pubring.gpg` which contains the public keys, and `.secring.gpg` which contains the private keys.\r\n\r\n> Note the private key is not protected by a passphrase.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}